Java’da veri giriş/çıkış işlemlerini, bir yerden başka bir yere (byte dizileri halinde) akan veriler
olarak düşünebiliriz.


Veri okumak için bir giriş akışı (Input Stream) ve veri yazmak için bir çıktı akışı (Output Stream) kullanılır.

Örneğin, ilk "Hello World!" örneğimizde, ekrana çıktı vermek için System.out'u kullandık. Burada,
System.out bir tür çıktı akışıdır (Output Stream).



Java’da veri akımlarının iki ana gruba ayrıldığını söylemeliyiz:

Byte akımları (Byte Streams)

Karakter akımları (Character Streams)

Byte akışı, tek baytlık (8 bit) veriyi okumak ve yazmak için kullanılır. Resim, grafik, ses ve benzeri karakter
tipinden olmayan bütün akımlar byte akımlarıdır.
Tüm byte akışı sınıfları, InputStream ve OutputStream soyut (abstract) sınıflardan türetilir.

Karakter akışı, tek bir veri karakterini okumak ve yazmak için kullanılır. Karakter akımları, adından da
anlaşılacağı üzere, karakter tipinden verilerin giriş/çıkışını yapar. Unicode kullandığı için, farklı ülkelerin
alfabelerine uyum sağlar.
 Tüm karakter akışı sınıfları, Reader ve Writer soyut (abstract) sınıflarından türetilir.

--------------------------------------------------------------------------------------------------------------------

File sınıfı :

Java.io paketinin File sınıfı, dosyalar ve dizinler üzerinde çeşitli işlemler gerçekleştirmek için kullanılır.

Dosya, ilgili bilgileri depolamak için kullanılabilen adlandırılmış bir konumdur.

Örneğin : main.java, Java programı hakkında bilgiler içeren bir Java dosyasıdır.

Dizinler, dosya ve alt dizinlerden oluşan bir koleksiyondur. Bir dizinin içindeki bir dizin,
alt dizin olarak bilinir.

Bir File nesnesi oluşturmak için, önce java.io.File paketini içe aktarmamız gerekir.

Metotları :

-createNewFile() dosya oluşturur
-delete() siler
-read() okur
-write() yazar

--------------------------------------------------------------------------------------------------------------------

InputStream Sınıfları :

InputStream sınıfı byte akışını temsil eden bir abstract sınıftır ve Java.io paketinden gelmektedir.
InputStream abstract bir sınıf olduğu için kendi başına kullanışlı değildir o yüzden InputStream'a ait alt sınıflar
veri okumak için kullanılır.

InputStream alt sınıfları :
FileInputStream,
ByteArrayInputStream,
ObjectInputStream

--------------------------------------------------------------------------------------------------------------------

FileInputStream :

Java.io paketinin FileInputStream sınıfı, dosyalardan verileri (bayt cinsinden) okumak için kullanılır.

InputStream soyut (Abstract) sınıfını miras alır.

read() : Dosyadan tek baytlık veri okur.

read(byte[] array) : dosyadan verileri bayt cinsinde okur ve belirtilen dizide depolar